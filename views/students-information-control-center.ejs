<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
          integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

    <link rel="stylesheet" type="text/css" href="/stylesheets/style.css">

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.6/css/all.css">

    <title>Students Information Control Center</title>
</head>

<body>

<!--navbar-->
<nav class="navbar navbar-expand-lg navbar-light navbar-bg">
    <a class="navbar-brand logo-font" href="#">
        <img src="http://www.emoji.co.uk/files/google-emojis/symbols-android/8052-high-brightness-symbol.png" width="30"
             height="30" alt="">
        Brightness
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/">HOME <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/application-form">APPLICATION FORM</a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" href="/students-information-control-center">CONTROL CENTER</a>
            </li>
        </ul>
    </div>
</nav>


<div class="container" id="root">
    <div class="row justify-content-center align-items-center carousel-bg p-2">
        <div class="col-12 col-md-8">
            <div id="carouselExampleSlidesOnly" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img class="d-block w-100 carousel-img"
                             src="http://www.orangebd.com/images/products/school-management-system.png"
                             alt="First slide">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr>
    <div class="row justify-content-start mt-3">

        <!--choosing action buttons-->
        <!--choose between managing students information,applicants information or students grades-->
        <div class="col-12 col-md-3 vr">
            <button @click="objectToShow = 'students'" type="button"
                    class="btn btn-dark btn-lg btn-block">Manage
                Students info
            </button>
            <button @click="objectToShow = 'applicants'" type="button"
                    class="btn btn-dark btn-lg btn-block">Manage
                Applicants
            </button>
            <button @click="objectToShow = 'grades'" type="button"
                    class="btn btn-dark btn-lg btn-block">Manage
                Grades
            </button>
            <img class="h-20 w-100" src="https://www.renweb.com/wp-content/uploads/Icons-01.png" alt="">
        </div>

        <!--in case of managing students information-->
        <div class="col-12 col-md-9" v-show="objectToShow == 'students'">
            <div class="row">
                <div class="col-12 col-md-4" v-for="student in students" v-if="student.status == 'student'">

                    <!--view students information-->
                    <div class="card-deck my-1">
                        <div class="card text-center bg-light mx-1">
                            <div class="card-body">
                                <h5 class="card-title">{{student.fullName}}</h5>
                                <p class="card-text">ID : {{student.id}} <br> Gender : {{student.gender}} <br> Birth date :
                                    {{student.birthDate}} <br> Address : {{student.address}} <br>
                                    Registration Date : {{student.registrationDate}} <br>
                                    Graduation Year : {{student.expectedGraduationYear}}
                                    <br> Stage : {{student.stage}} <br>
                                    No of Non-Attendance Days : {{student.noOfNonAttendanceDays}} <br>
                                </p>
                                <div class="btn-group btn-group-sm" role="group">
                                    <button @click="openEditStudentModal(student)" class="btn btn-info">Edit
                                    </button>
                                    <button @click="deleteStudent(student._id)" class="btn btn-danger">Delete
                                    </button>
                                </div>
                            </div>
                            <div class="card-footer">
                                <small class="text-muted">Email : {{student.email}}</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--modal to edit choosed student's information-->
        <div class="modal fade" id="editStudentModal" tabindex="-1" role="dialog"
             aria-labelledby="exampleModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">EDIT STUDENT INFORMATION</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body bg-light">
                        <div class="form-group">
                            <label>Student ID</label>
                            <input v-model="editingStudent.id" type="text" class="form-control"
                                   placeholder="Numbers Only">
                        </div>
                        <div class="form-group">
                            <label>Student Full Name</label>
                            <input v-model="editingStudent.fullName" type="text" class="form-control"
                                   placeholder="First-Middle-Last">
                        </div>
                        <div class="form-group">
                            <label>Gender</label>
                            <input v-model="editingStudent.gender" type="text" class="form-control"
                                   placeholder="Male/Female">
                        </div>
                        <div class="form-group">
                            <label>Birth Date</label>
                            <input v-model="editingStudent.birthDate" type="text" class="form-control"
                                   placeholder="dd/mm/yyyy">
                        </div>
                        <div class="form-group">
                            <label>E-mail</label>
                            <input v-model="editingStudent.email" type="text" class="form-control"
                                   placeholder="something@example.com">
                        </div>
                        <div class="form-group">
                            <label>Current Address</label>
                            <input v-model="editingStudent.address" type="text" class="form-control"
                                   placeholder="City/Street">
                        </div>
                        <div class="form-group">
                            <label>Student Current Status</label>
                            <input v-model="editingStudent.status" type="text" class="form-control"
                                   placeholder="Student/Applicant/Graduated">
                        </div>
                        <div class="form-group">
                            <label>Registration Date</label>
                            <input v-model="editingStudent.registrationDate" type="text" class="form-control"
                                   placeholder="dd/mm/yyyy">
                        </div>
                        <div class="form-group">
                            <label>Expected Graduation Year</label>
                            <input v-model="editingStudent.expectedGraduationYear" type="text" class="form-control"
                                   placeholder="yyyy">
                        </div>
                        <div class="form-group">
                            <label>Stage</label>
                            <input v-model="editingStudent.stage" type="text" class="form-control"
                                   placeholder="1/2/3">
                        </div>
                        <div class="form-group">
                            <label>No. of Non-Attendance Days</label>
                            <input v-model="editingStudent.noOfNonAttendanceDays" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button id="editStudent" @click="editStudent($event)" type="button"
                                    class="btn btn-info">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--in case of managing applicants information-->
        <div class="col-12 col-md-9" v-show="objectToShow == 'applicants'">
            <!--when there is no applicant-->
            <div class="row justify-content-center align-items-center" v-if="countApplicants == 0">
                <div class="col-12 col-md-6">
                    <div class="alert alert-light text-center" role="alert">
                        <h3>No Applicants Exist!</h3>
                    </div>
                </div>
            </div>
            <!--when there are applicants-->
            <div class="row" v-else-if="countApplicants > 0">
                <div class="col-12 col-md-4" v-for="student in students" v-if="student.status == 'applicant'">
                    <div class="card-deck my-1">
                        <div class="card text-center bg-light mx-1">
                            <div class="card-body">
                                <h5 class="card-title">{{student.fullName}}</h5>
                                <p class="card-text">Birth date : {{student.birthDate}}
                                    <br>
                                    Average : {{student.primaryStageAverage}}</p>
                                <div class="btn-group btn-group-sm" role="group">
                                    <button @click="editApplicant(student)" class="btn btn-info">Accept</button>
                                    <button @click="deleteStudent(student._id)" class="btn btn-danger">Refuse
                                    </button>
                                </div>
                            </div>
                            <div class="card-footer">
                                <small class="text-muted">Email : {{student.email}}</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--in case of manage students grades-->
        <div class="col-12 col-md-9" v-show="objectToShow == 'grades'">
            <h5>*Click on the row to edit selected student information</h5>
            <!--table to view students grades-->
            <div class="card">
                <div class="card-body">
                    <table class="table table-bordered table-light table-hover table-sm table-responsive-sm">
                        <thead>
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Student Name</th>
                            <th scope="col">Stage</th>
                            <th scope="col">Maths</th>
                            <th scope="col">Chemistry</th>
                            <th scope="col">Physics</th>
                            <th scope="col">Biology</th>
                            <th scope="col">History</th>
                            <th scope="col">Geography</th>
                            <th scope="col">Sport</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr @click="openEditGradesModal(student)" v-for="student in students"
                            v-if="student.status == 'student'">
                            <th scope="row">{{student.id}}</th>
                            <td>{{student.fullName}}</td>
                            <td>{{student.stage}}</td>
                            <td>{{student.grades.maths}}</td>
                            <td>{{student.grades.chemistry}}</td>
                            <td>{{student.grades.physics}}</td>
                            <td>{{student.grades.biology}}</td>
                            <td>{{student.grades.history}}</td>
                            <td>{{student.grades.geography}}</td>
                            <td>{{student.grades.sport}}</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!--modal to edit choosed student's grades-->
        <div class="modal fade" id="editGradesModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Grades</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body bg-light">
                        <div class="form-group">
                            <label>Student Full Name</label>
                            <input v-model="editingStudent.fullName" type="text" class="form-control"
                                   placeholder="First-Middle-Last">
                        </div>
                        <div class="form-group">
                            <label>Maths</label>
                            <input v-model="editingStudent.grades.maths" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="form-group">
                            <label>Chemistry</label>
                            <input v-model="editingStudent.grades.chemistry" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="form-group">
                            <label>Physics</label>
                            <input v-model="editingStudent.grades.physics" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="form-group">
                            <label>Biology</label>
                            <input v-model="editingStudent.grades.biology" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="form-group">
                            <label>History</label>
                            <input v-model="editingStudent.grades.history" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="form-group">
                            <label>Geography</label>
                            <input v-model="editingStudent.grades.geography" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="form-group">
                            <label>Sport</label>
                            <input v-model="editingStudent.grades.sport" type="text" class="form-control"
                                   placeholder="Number">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button id="editGrades" @click="editStudent($event)" type="button" class="btn btn-info">
                                Save
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--page footer-->
<footer class="text-muted mt-4 list-background bg-light p-2">
    <div class="container">
        <p class="float-right">
            <a href="#">Back to top</a>
        </p>
        <p>Copyright © 2008-2018 Lemonjuice, Inc. All rights reserved. give us feedback on <a href="http://gmail.com">lemonjuice@gmail.com</a>
        </p>
        <p> contact us on facebook at <a href="http://www.facebook.com">LemonJuice
            </a> or visit our <a href="http://www.twitter.com">twitter account</a></p>
    </div>
</footer>

<!-- Optional JavaScript -->
<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2.5.13/dist/vue.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>
    // to get students array from the API using GET method
    function getStudents() {
        axios.get('/api/brightness-school-students').then(function (response) {
            app.students = response.data
        })
    }

    var app = new Vue({
        el: '#root',
        data: {
            students: [],
            editingStudent: {
                id: '',
                fullName: '',
                status: '',
                gender: '',
                address: '',
                birthDate: '',
                registrationDate: '',
                expectedGraduationYear: '',
                stage: 1,
                averages: [{
                    stage: '',
                    average: 1
                }],
                noOfNonAttendanceDays: 0,
                grades: {
                    maths: 0,
                    chemistry: 0,
                    physics: 0,
                    biology: 0,
                    history: 0,
                    geography: 0,
                    sport: 0,
                },
                email: ''
            },
            objectToShow: '',
        },
        methods: {

            // to open editing student's information modal'
            openEditStudentModal: function (student) {
                this.editingStudent = student
                $('#editStudentModal').modal('show')
            },

            // to open editing student's grades modal
            openEditGradesModal: function (student) {
                this.editingStudent = student
                $('#editGradesModal').modal('show')
            },

            // to edit student's information by sending request to the API using PUT method
            editStudent: function (event) {
                targetId = event.currentTarget.id
                axios.put('/api/brightness-school-students', {
                    student: this.editingStudent
                }).then(function (response) {
                    if (response.data.isSuccess) {
                        if (targetId == 'editStudent')
                            $('#editStudentModal').modal('hide');
                        else if (targetId == 'editGrades')
                            $('#editGradesModal').modal('hide');
                        getStudents();
                    }
                })
            },

            // to delete student by sending request to the API using delete method
            deleteStudent: function (id) {
                axios.delete('/api/brightness-school-students', {
                    params: {
                        id: id
                    }
                }).then(function (response) {
                    if (response.data.isSuccess) {
                        getStudents();
                    }
                })
            },

            // to edit applicant's information by sending request to the API using PUT method
            editApplicant: function (acceptedApplicant) {
                acceptedApplicant.status = 'student'
                axios.put('/api/brightness-school-students', {
                    student: acceptedApplicant
                }).then(function (response) {
                    if (response.data.isSuccess) {
                        getStudents();
                    }
                })
            },

        },
        computed: {
            // to count applicants
            countApplicants: function () {
                var count = 0;
                for (i = 0; i < this.students.length; i++) {
                    if (this.students[i].status == 'applicant')

                        count++
                }
                return count
            }
        },

        // get students array from the API using GET method once the page loaded
        mounted: function () {
            getStudents();
        }

    })
</script>


</body>
</html>